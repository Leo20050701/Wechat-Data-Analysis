import json
import jieba
import re
from datetime import datetime
import csv

def creat_autoGenerated_wordcloud(filename):
    with open('output.json', 'r', encoding='utf-8') as file:
        chat_data = json.load(file)

    word_freq = {}

    for msg in chat_data:
        words = jieba.cut(msg["msgContent"])
        for word in words:
            if word.strip() and word not in word_freq:  # 添加word.strip()来忽略空白字符
                word_freq[word] = 1
            elif word.strip():
                word_freq[word] += 1

    with open('word_cloud.txt', 'w', encoding = 'utf-8') as out_file:
        for word, freq in sorted(word_freq.items(), key=lambda item: item[1], reverse=True):
            out_file.write(f"{word}: {freq}\n")


def count_existance(word_list):
    word_freq = {}
    for i in word_list:
        word_freq[i] = 0

    with open('output.json', 'r', encoding='utf-8') as file:
        chat_data = json.load(file)
    
    for msg in chat_data:
        content = msg["msgContent"]
        for key in word_list:
            if key in content:
                word_freq[key] += 1

    word_freq_list = [{"word": word, "freq": freq} for word, freq in word_freq.items()]

    with open('word_cloud.json', 'w', encoding='utf-8') as out_file:
        json.dump(word_freq_list, out_file, ensure_ascii=False, indent=4)


def count_message_type(filename):
    word_freq = {}

    with open(filename, 'r', encoding='utf-8') as file:
        chat_data = json.load(file)

    msgType = ""
    
    for msg in chat_data:
        if msg["msgSender"] == "韩凌霄":
            if msg["msgType"] == 1:
                msgType = "文字消息"
            else:
                if msg["msgContent"] == "<image>":
                    msgType = "图片"
                elif msg["msgContent"] == "<audio message>":
                    msgType = "语音"
                elif msg["msgContent"] == "<add friend>":
                    msgType = "添加好友"
                elif msg["msgContent"] == "<video>":
                    msgType = "视频"
                elif msg["msgContent"] == "<location>":
                    msgType = "位置信息"
                elif msg["msgContent"] == "<emoji>":
                    msgType = "表情包"
                elif "tickled" in msg["msgContent"]:
                    msgType = "拍一拍"
                elif msg["msgType"] == 49:
                    msgType = "文字消息"
                else:
                    msgType = "其他"
    
            if msgType not in word_freq:
                word_freq[msgType] = 1
            else:
                word_freq[msgType] += 1

    word_freq_list = [{"mseType": type, "freq": freq} for type, freq in word_freq.items()]

    with open('word_cloud.json', 'w', encoding='utf-8') as out_file:
        json.dump(word_freq_list, out_file, ensure_ascii=False, indent=4)


def creat_message_bank(filename):
    with open('output.json', 'r', encoding='utf-8') as file:
        chat_data = json.load(file)

    word_freq = ""

    for msg in chat_data:
        if msg["msgType"] == 1:
            word_freq += msg["msgContent"]

    with open('word_cloud.txt', 'w', encoding = 'utf-8') as out_file:
        out_file.write(word_freq)


def count_name_existance(filename):
    with open('output.json', 'r', encoding='utf-8') as file:
        chat_data = json.load(file)

    word_freq = {}
    date_pattern = re.compile(r'\d{4}-\d{2}-\d{2}')

    for msg in chat_data:
        
        if msg["msgType"] == 1:
            if "lyn" in msg["msgContent"]:
                date_match = date_pattern.search(msg["realTime"])
                if date_match:
                    date = date_match.group()
                    if date not in word_freq:
                        word_freq[date] = 1
                    else:
                        word_freq[date] += 1

    word_freq_list = [{"mseType": type, "freq": freq} for type, freq in word_freq.items()]

    with open('lyn_cloud.csv', 'w', encoding='utf-8', newline='') as out_file:
        csv_writer = csv.writer(out_file)
        csv_writer.writerow(['Date', 'Count'])  # Write the header

        for date, count in word_freq.items():
            csv_writer.writerow([date, count])